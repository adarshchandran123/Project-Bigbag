<body class="dark-edition">

    <div class="container">
        <div class="row">

            <div style="margin-top: 100px; width: 50%;">
                <p style="font-size: 40px; color: white; font-family: 'Acme', sans-serif;">CATEGORY ADS</p>

                <div id="image-box" style="width: 300px; height: 300px; display: none;"></div>
                <button class="btn btn-primary mt-3" type="button" style="display: none;" id="crop-btn">Crop</button>
            </div>

            <form action="/admin/add_Adds1" method="POST" id="valid23" enctype="multipart/form-data">

                <div style="width: 30%;">
                    <label for=""> Category Name</label> <br>
                    <select class="form-select" id="category_image" name="category" aria-label="Default select example">
                        <option value="" selected>Select Category</option>
                        {{#each CategoryOffer}}
                        <option value="{{this.category}}">{{this.category}}</option>
                        {{/each}}

                    </select><br>
                </div>

                <div class="mt-1">
                    <div id="invalid1"> </div>
                    <label for="">IMAGE 1</label>
                    <img src="" alt="" style="width: 300px; height:auto" id="imgview1">

                    <input type="file" name="image1" id="file1" class="form-control"
                        onchange="return fileValidation1()">

                </div>

                <input type="submit" id="confirm-btn" value="Submit" class="btn btn-success">

            </form>
        </div>

    </div>
    </div>


</body>

<script src="https://cdn.jsdelivr.net/npm/jquery-validation@1.19.3/dist/jquery.validate.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.js"></script>





<script>
    $(document).ready(function(){
        $('#valid23').validate({
            rules:{
                category:{
                    required:true
                },
                image1:{
                    required:true
                }
            },
            messages:{
                category:"Select Category",
                image1:"Select Images"

            }
        })
    })
</script>


<style>
    label.error{
        color: rgb(170, 33, 33);
        font-size: large;
    }
</style>





<script>

     function fileValidation1() {
        const imagebox = document.getElementById('image-box')
        const crop_btn = document.getElementById('crop-btn')
        var fileInput = document.getElementById('file1');
        
        var filePath = fileInput.value;
        var allowedExtensions = /(\.jpg)$/i;
        if (!allowedExtensions.exec(filePath)) {
            document.getElementById('invalid1').innerHTML='<p style="font-size: larger; font-weight: bolder; color: red;">Invalid</p>'
            fileInput.value = '';
            return false;
        } else {
          document.getElementById('invalid1').innerHTML=''
            //Image preview
            const img_data = fileInput.files[0]
            const url = URL.createObjectURL(img_data)
            imagebox.innerHTML = `<img src="${url}" id="image" style="width:100%">`
            const image = document.getElementById('image')
            document.getElementById('image-box').style.display = 'block'
            document.getElementById('crop-btn').style.display = 'block'
            document.getElementById('confirm-btn').style.display = 'none'
           
            const cropper = new Cropper(image, {
                autoCropArea: 1,
                viewMode: 1,
                scalable: false,
                zoomable: false,
                movable: false,
                aspectRatio: 40 / 15,
              //  preview: '.preview',
                minCropBoxWidth:180 ,
                minCropBoxHeight: 240,
            })
            crop_btn.addEventListener('click', () => {
                cropper.getCroppedCanvas().toBlob((blob) => {
                    let fileInputElement = document.getElementById('file1');
                    let file = new File([blob], img_data.name, { type: "image/*", lastModified: new Date().getTime() });
                    let container = new DataTransfer();
                   
                    container.items.add(file);
                     const img = container.files[0]
                     var url =URL.createObjectURL(img)                    
                     fileInputElement.files = container.files;
                     document.getElementById('imgview1').src=url
                    document.getElementById('image-box').style.display = 'none'
                    document.getElementById('crop-btn').style.display = 'none'
                    document.getElementById('confirm-btn').style.display = 'block'
                });
            });
        }
    }


</script>






